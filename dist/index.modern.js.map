{"version":3,"file":"index.modern.js","sources":["../src/CloseIcon.jsx","../src/Chip.jsx","../src/DownIcon.jsx","../src/Options.jsx","../src/index.jsx","../src/useComponentVisible.jsx"],"sourcesContent":["import React from 'react'\n\nexport default function CloseIcon() {\n  return (\n    <svg className='msl-close-icn'>\n      <line x1='0' y1='0' x2='15' y2='15' />\n      <line x1='0' y1='15' x2='15' y2='0' />\n    </svg>\n  )\n}\n","import React from 'react'\nimport CloseIcon from './CloseIcon'\n\nexport default function Chip({ value, deleteAction }) {\n  const showChipText = (opt) => {\n    if (typeof opt.label === 'object') {\n      return opt?.title || opt.value\n    } else {\n      return opt.label\n    }\n  }\n\n  return (\n    <div clickable='true' className='msl-chip'>\n      {showChipText(value)}\n      <div\n        role='button'\n        clickable='true'\n        aria-label='delete-value'\n        onClick={deleteAction}\n        onKeyPress={deleteAction}\n        tabIndex='0'\n        className='msl-btn msl-chip-delete msl-flx'\n      >\n        <CloseIcon />\n      </div>\n      <span />\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function DownIcon() {\n  return (\n    <svg className='msl-arrow-icn'>\n      <line x1='10' y1='15' x2='2' y2='7' />\n      <line x1='18' y1='7' x2='10' y2='15' />\n    </svg>\n  )\n}\n","import React from 'react'\n\nfunction Options({\n  opts,\n  singleSelect,\n  addValue,\n  checkValueExist,\n  value,\n  largeData,\n  menuOpen\n}) {\n  if (largeData && !menuOpen) return null\n  const optsArr = []\n  function addInArr(opts) {\n    for (const [i, opt] of opts.entries()) {\n      if (opt.type === 'group') {\n        optsArr.push(\n          <div key={opt.title + i} data-msl className='msl-grp-title'>\n            {opt.title}\n          </div>\n        )\n        if (opt.childs.length > 0) {\n          addInArr(opt.childs)\n        } else {\n          optsArr.push(\n            <option className='msl-option msl-option-disable'>\n              {opt.emptyDataLabel || 'No Data Found'}\n            </option>\n          )\n        }\n      } else {\n        optsArr.push(\n          <div\n            tabIndex='0'\n            key={opt.value + opt.label + i + 10}\n            {...(!singleSelect && { 'data-msl': true })}\n            style={{\n              ...(opt.style && opt.style)\n            }}\n            onClick={() => {\n              !opt.disabled && addValue(opt)\n            }}\n            onKeyPress={(e) => {\n              e.key === 'Enter' && !opt.disabled && addValue(opt)\n            }}\n            title={typeof opt.label === 'object' ? opt?.title : opt.label}\n            className={`msl-option ${checkValueExist(opt, value) ? 'msl-option-active' : ''\n              } ${opt.disabled ? 'msl-option-disable' : ''} ${opt.classes !== undefined ? opt.classes : ''\n              }`}\n            value={opt.value}\n          >\n            {opt.label}\n          </div>\n        )\n      }\n    }\n  }\n  addInArr(opts)\n  return <div>{optsArr}</div>\n}\n\nexport default Options\n","/* eslint-disable no-labels */\nimport React, { useState, useEffect, useRef } from 'react'\nimport Chip from './Chip.jsx'\nimport CloseIcon from './CloseIcon.jsx'\nimport DownIcon from './DownIcon.jsx'\nimport Options from './Options'\nimport './styles.css'\nimport useComponentVisible from './useComponentVisible.jsx'\n\nMultiSelect.defaultProps = {\n  clearable: true,\n  downArrow: true,\n  singleSelect: false,\n  jsonValue: false,\n  defaultValue: '',\n  disableChip: false,\n  name: '',\n  style: {},\n  disabled: false,\n  limit: null,\n  emptyDataLabel: 'No Data Found',\n  placeholder: 'Select...',\n  onChange: () => {},\n  options: [\n    {\n      label: 'Empty',\n      value: '',\n      disabled: true,\n      style: { textAlign: 'center' }\n    }\n  ],\n  customValue: false,\n  chipAlternateText: 'Item Selected'\n}\n\nfunction MultiSelect({\n  options: userOptions,\n  downArrowIcon,\n  closeIcon,\n  clearable,\n  downArrow,\n  onChange,\n  singleSelect,\n  jsonValue,\n  defaultValue,\n  className,\n  placeholder,\n  disableChip,\n  name,\n  style,\n  attr,\n  largeData,\n  disabled,\n  limit,\n  emptyDataLabel,\n  customValue,\n  onMenuOpen,\n  onMenuClose,\n  chipAlternateText\n}) {\n  const [value, setValue] = useState([])\n  const [options, setOptions] = useState(userOptions || [])\n  const [search, setSearch] = useState(null)\n  const inputFld = useRef(null)\n  const {\n    ref: componentRef,\n    isComponentVisible: menuOpen,\n    setIsComponentVisible: setMenuOpen\n  } = useComponentVisible({\n    initialIsVisible: false,\n    onClickOutside: onMenuClose\n  })\n\n  const calculatedWidth = `calc(100% - ${\n    clearable && downArrow ? 60 : downArrow || clearable ? 40 : 5\n  }px)`\n\n  const getValueObjFromOptios = (defaultValue, options) => {\n    if (!defaultValue) return []\n    let defaultValArr = defaultValue\n    const extraValues = []\n    const searchedOptions = []\n\n    if (typeof defaultValue === 'string') {\n      defaultValArr = defaultValue.split(',')\n    }\n\n    const setExtraValue = (value) => {\n      if (typeof value === 'string') {\n        extraValues.push({ label: value, value })\n      } else if (typeof value === 'object') {\n        const newValueObj = { label: value, value }\n        if ('label' in value && typeof value.label === 'string') {\n          newValueObj.label = value.label\n        } else if ('title' in value) {\n          newValueObj.label = value.title\n        }\n        extraValues.push(newValueObj)\n      }\n    }\n\n    for (let i = 0; i < defaultValArr.length; i++) {\n      if (typeof defaultValArr[i] === 'string') {\n        const optObject = searchOptions(\n          defaultValArr[i],\n          options,\n          true,\n          'value'\n        )\n        if (optObject.length > 0) {\n          searchedOptions.push(optObject[0])\n        } else if (customValue) {\n          setExtraValue(defaultValArr[i])\n        }\n      } else if (typeof defaultValArr[i] === 'object') {\n        const optObject = searchOptions(\n          defaultValArr[i].value,\n          options,\n          true,\n          'value'\n        )\n        if (optObject.length > 0) {\n          searchedOptions.push(optObject[0])\n        } else if (customValue) {\n          setExtraValue(defaultValArr[i])\n        }\n      }\n    }\n\n    let customValuesGroup = []\n    if (extraValues.length) {\n      customValuesGroup = createCustomValueAndOption(extraValues)\n    }\n    setOptions([...options, ...customValuesGroup])\n    return [...searchedOptions, ...extraValues]\n  }\n\n  useEffect(() => {\n    setOptions(userOptions)\n  }, [userOptions])\n\n  useEffect(() => {\n    let preDefinedValue = getValueObjFromOptios(defaultValue, options)\n\n    if (singleSelect && preDefinedValue.length > 0) {\n      preDefinedValue = [preDefinedValue[0]]\n    }\n\n    setValue(preDefinedValue)\n  }, [defaultValue])\n\n  const setNewValue = (val) => {\n    setValue(val)\n    if (jsonValue) {\n      onChange(val)\n    } else {\n      let stringvalue = ''\n      stringvalue += val.map((itm) => itm.value)\n      onChange(stringvalue)\n    }\n  }\n\n  const checkValueExist = (value, arr) => {\n    const bool = arr.some((itm) => itm.value === value.value)\n    return bool\n  }\n\n  const filterCreateOpt = ({ label, value }) => {\n    if (typeof label !== 'object' && label.match(/Create \"|\"+/g)) {\n      label = label.replace(/Create \"|\"+/g, '')\n    }\n    return { label, value }\n  }\n\n  const addValue = (newValObj) => {\n    let tmp = [...value]\n    if (singleSelect) {\n      if (checkValueExist(newValObj, value)) {\n        tmp = []\n      } else {\n        tmp = [newValObj]\n      }\n    } else {\n      if (!checkValueExist(newValObj, value)) {\n        if (limit === null) {\n          tmp.push(newValObj)\n        } else if (limit > value.length) {\n          tmp.push(newValObj)\n        }\n      } else {\n        tmp = tmp.filter((itm) => itm.value !== newValObj.value)\n      }\n    }\n    setNewValue(tmp)\n    setSearch(null)\n    // clear search input\n    if (inputFld.current) {\n      inputFld.current.innerHTML = ''\n    }\n  }\n\n  const deleteValue = (i) => {\n    const tmp = [...value]\n    tmp.splice(i, 1)\n    setNewValue(tmp)\n  }\n\n  const clearValue = () => {\n    setNewValue([])\n  }\n\n  const showSearchOption = () => {\n    if (!singleSelect && !disableChip) {\n      return true\n    } else if (singleSelect && !value.length) {\n      return true\n    } else if (!singleSelect && disableChip && !value.length) {\n      return true\n    }\n    return false\n  }\n\n  const searchOptions = (str, options, exact, type) => {\n    const searchedOptions = []\n    const searchedOptValues = []\n\n    const searchInOptions = (opt) => {\n      for (let i = 0; i < opt.length; i++) {\n        if (opt[i]?.type === 'group') {\n          searchInOptions(opt[i].childs)\n        } else if (!exact) {\n          if (\n            typeof opt[i].label !== 'object' &&\n            opt[i].label.match(new RegExp(`${str}`, 'gi'))\n          ) {\n            searchedOptions.push(opt[i])\n          } else if (\n            typeof opt[i].label === 'object' &&\n            opt[i]?.title?.match(new RegExp(`${str}`, 'gi'))\n          ) {\n            searchedOptions.push(opt[i])\n          } else if (opt[i].value.match(new RegExp(`${str}`, 'gi'))) {\n            searchedOptValues.push(opt[i])\n          }\n        } else if (exact) {\n          if (opt[i][type] === str) {\n            searchedOptions.push(opt[i])\n          }\n        }\n        if (typeof opt[i].label === 'object' && !('title' in opt[i])) {\n          console.warn(\n            '[multiselect] you must provide a title property as typeof string, if you want to render jsx in option label'\n          )\n        }\n      }\n    }\n    searchInOptions(options)\n    return [...searchedOptions, ...searchedOptValues]\n  }\n\n  const createCustomValueAndOption = (valueObj) => {\n    const customValuesGroup = []\n    const customValuesIndx = options.findIndex(\n      (opt) => opt?.type === 'group' && opt?.title === 'Custom Values'\n    )\n\n    if (customValuesIndx === -1) {\n      customValuesGroup.push({\n        title: 'Custom Values',\n        type: 'group',\n        childs: [...valueObj]\n      })\n    } else if (Array.isArray(valueObj)) {\n      valueObj.map((value) => options[customValuesIndx].childs.push(value))\n    } else if (typeof valueObj === 'object') {\n      options[customValuesIndx].childs.push(valueObj)\n    }\n    setOptions([...options, ...customValuesGroup])\n\n    return customValuesGroup\n  }\n\n  const handleSearchAndCustomValue = (e) => {\n    const textValue = e.target.textContent.trim().replace(/,+/g, '')\n\n    if (textValue) {\n      const newValue = {\n        label: `Create \"${textValue}\"`,\n        value: textValue\n      }\n\n      const searchedOptions = searchOptions(textValue, options)\n\n      if (searchedOptions.length) {\n        if (customValue) {\n          const exactOptionValue = searchOptions(\n            textValue,\n            options,\n            true,\n            'value'\n          )\n\n          !exactOptionValue.length && searchedOptions.push(newValue)\n        }\n        setSearch(searchedOptions)\n      } else {\n        customValue ? setSearch([newValue]) : setSearch([])\n      }\n\n      const filteredNewValue = filterCreateOpt(newValue)\n\n      if (e.key === 'Enter' || e.key === ',') {\n        if (\n          customValue &&\n          !searchedOptions.length &&\n          !checkValueExist(filteredNewValue, value)\n        ) {\n          createCustomValueAndOption(filteredNewValue)\n\n          addValue(newValue)\n        } else {\n          search.length > 0 && addValue(search[0])\n        }\n      }\n    } else {\n      setSearch(null)\n    }\n  }\n\n  const notClickableItem = (target) => {\n    if (\n      target.hasAttribute('clickable') ||\n      target.parentNode.hasAttribute('clickable') ||\n      target.parentNode.parentNode.hasAttribute('clickable') ||\n      target.parentNode.parentNode.parentNode.hasAttribute('clickable')\n    ) {\n      return false\n    }\n    return true\n  }\n\n  const checkIsDropdownHandle = (target) => {\n    if (\n      target.hasAttribute('dropdown-handle') ||\n      target.parentNode.hasAttribute('dropdown-handle') ||\n      target.parentNode.parentNode.hasAttribute('dropdown-handle')\n    ) {\n      return true\n    }\n  }\n\n  const focusSearchInput = () => {\n    if (inputFld.current) {\n      inputFld.current.focus()\n    }\n  }\n\n  const openMenu = ({ target }) => {\n    if (notClickableItem(target)) {\n      if (checkIsDropdownHandle(target)) {\n        if (!menuOpen) {\n          setMenuOpen(true)\n          onMenuOpen()\n          focusSearchInput()\n        } else {\n          setMenuOpen(false)\n          onMenuClose()\n        }\n      } else {\n        setMenuOpen(true)\n        onMenuOpen()\n        focusSearchInput()\n      }\n    }\n  }\n\n  const showLabel = (optionObj) => {\n    console.log(optionObj)\n    if (typeof optionObj.label === 'object') {\n      return optionObj?.title || optionObj.value\n    } else {\n      return optionObj.label\n    }\n  }\n\n  const getActiveClass = () => {\n    const el = componentRef.current\n    var rect = el.getBoundingClientRect()\n    if (window.innerHeight - (rect.top + el.clientHeight) < 200) {\n      return 'msl-active-up'\n    }\n    return 'msl-active'\n  }\n\n  return (\n    <div\n      ref={componentRef}\n      {...attr}\n      onClick={openMenu}\n      tabIndex='0'\n      onKeyPress={openMenu}\n      style={{ ...style }}\n      className={`msl-wrp msl-vars ${className} ${\n        disabled ? 'msl-disabled' : ''\n      }`}\n    >\n      <input name={name} type='hidden' value={value?.map((itm) => itm.value)} />\n      <div data-msl className={`msl ${menuOpen && getActiveClass()} `}>\n        <div\n          data-msl\n          className='msl-input-wrp'\n          style={{ width: calculatedWidth }}\n        >\n          {!singleSelect &&\n            !disableChip &&\n            value.map((val, i) => (\n              <Chip\n                key={`msl-chip-${i + 11}`}\n                value={val}\n                deleteAction={() => deleteValue(i)}\n              />\n            ))}\n          {!singleSelect && disableChip && value.length > 0 && (\n            <span\n              className='msl-single-value'\n              data-msl\n              style={{ width: calculatedWidth }}\n            >\n              {value.length === 1\n                ? showLabel(value[0])\n                : `${value.length} ${chipAlternateText}`}\n            </span>\n          )}\n          {singleSelect && value.length === 1 && (\n            <span\n              className='msl-single-value'\n              data-msl\n              style={{ width: calculatedWidth }}\n            >\n              {showLabel(value[0])}\n            </span>\n          )}\n          {showSearchOption() && (\n            <div\n              data-msl\n              data-placeholder={placeholder}\n              className='msl-input'\n              contentEditable={!disabled}\n              onKeyUp={handleSearchAndCustomValue}\n              ref={inputFld}\n            />\n          )}\n        </div>\n        {(clearable || downArrow) && (\n          <div className='msl-actions msl-flx'>\n            {clearable && value.length > 0 && (\n              <div\n                role='button'\n                clickable='true'\n                aria-label='close-menu'\n                onClick={clearValue}\n                onKeyPress={clearValue}\n                tabIndex='0'\n                className='msl-btn msl-clear-btn msl-flx'\n              >\n                {closeIcon || <CloseIcon />}\n              </div>\n            )}\n            {downArrow && (\n              <div\n                role='button'\n                tabIndex='0'\n                dropdown-handle='true'\n                className='msl-btn msl-arrow-btn msl-flx'\n                style={{ ...(menuOpen && { transform: 'rotate(180deg)' }) }}\n              >\n                {downArrowIcon || <DownIcon />}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className='msl-options'>\n        {!search && options.length ? (\n          <Options\n            opts={options}\n            {...{\n              singleSelect,\n              addValue,\n              checkValueExist,\n              value,\n              largeData,\n              menuOpen\n            }}\n          />\n        ) : search && search.length ? (\n          <Options\n            opts={search}\n            {...{\n              singleSelect,\n              addValue,\n              checkValueExist,\n              value,\n              largeData,\n              menuOpen\n            }}\n          />\n        ) : (\n          ((search && !search.length) || (options && !options.length)) && (\n            <option className='msl-option msl-option-disable'>\n              {emptyDataLabel}\n            </option>\n          )\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default MultiSelect\n","import { useRef, useState, useEffect } from 'react'\n\nexport default function useComponentVisible({\n  initialIsVisible,\n  onClickOutside\n}) {\n  const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n  const handleHideDropdown = (event) => {\n    if (event.key === 'Escape') {\n      setIsComponentVisible(false)\n    }\n  }\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      document.removeEventListener('keydown', handleHideDropdown, true)\n      document.removeEventListener('click', handleClickOutside, true)\n      setIsComponentVisible(false)\n      onClickOutside()\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleHideDropdown, true)\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('keydown', handleHideDropdown, true)\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  })\n\n  return { ref, isComponentVisible, setIsComponentVisible }\n}\n"],"names":["CloseIcon","React","className","x1","y1","x2","y2","Chip","value","deleteAction","clickable","opt","label","title","role","aria-label","onClick","onKeyPress","tabIndex","DownIcon","Options","opts","singleSelect","addValue","checkValueExist","largeData","menuOpen","optsArr","addInArr","i","entries","type","push","key","data-msl","childs","length","emptyDataLabel","style","disabled","e","undefined","classes","MultiSelect","options","userOptions","downArrowIcon","closeIcon","clearable","downArrow","onChange","jsonValue","defaultValue","placeholder","disableChip","name","attr","limit","customValue","onMenuOpen","onMenuClose","chipAlternateText","setValue","useState","setOptions","search","setSearch","inputFld","useRef","ref","componentRef","isComponentVisible","setIsComponentVisible","setMenuOpen","initialIsVisible","onClickOutside","handleHideDropdown","event","handleClickOutside","current","contains","target","document","removeEventListener","useEffect","addEventListener","useComponentVisible","calculatedWidth","preDefinedValue","defaultValArr","extraValues","searchedOptions","split","setExtraValue","newValueObj","optObject","searchOptions","customValuesGroup","createCustomValueAndOption","getValueObjFromOptios","setNewValue","val","stringvalue","map","itm","arr","some","newValObj","tmp","filter","innerHTML","clearValue","str","exact","searchedOptValues","searchInOptions","match","RegExp","_opt$i2","_opt$i2$title","console","warn","valueObj","customValuesIndx","findIndex","Array","isArray","openMenu","hasAttribute","parentNode","notClickableItem","checkIsDropdownHandle","focus","showLabel","optionObj","log","el","rect","getBoundingClientRect","window","innerHeight","top","clientHeight","getActiveClass","width","splice","deleteValue","data-placeholder","contentEditable","onKeyUp","textValue","textContent","trim","replace","newValue","filteredNewValue","filterCreateOpt","dropdown-handle","transform","defaultProps","textAlign"],"mappings":"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"}