{"version":3,"file":"index.umd.js","sources":["../src/CloseIcon.jsx","../src/Chip.jsx","../src/DownIcon.jsx","../src/Options.jsx","../src/index.jsx","../src/useComponentVisible.jsx"],"sourcesContent":["import React from 'react'\n\nexport default function CloseIcon() {\n  return (\n    <svg className='msl-close-icn'>\n      <line x1='0' y1='0' x2='15' y2='15' />\n      <line x1='0' y1='15' x2='15' y2='0' />\n    </svg>\n  )\n}\n","import React from 'react'\nimport CloseIcon from './CloseIcon'\n\nexport default function Chip({ value, deleteAction }) {\n  const showChipText = (opt) => {\n    if (typeof opt.label === 'object') {\n      return opt?.title || opt.value\n    } else {\n      return opt.label\n    }\n  }\n\n  return (\n    <div clickable='true' className='msl-chip'>\n      {showChipText(value)}\n      <div\n        role='button'\n        clickable='true'\n        aria-label='delete-value'\n        onClick={deleteAction}\n        onKeyPress={deleteAction}\n        tabIndex='0'\n        className='msl-btn msl-chip-delete msl-flx'\n      >\n        <CloseIcon />\n      </div>\n      <span />\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function DownIcon() {\n  return (\n    <svg className='msl-arrow-icn'>\n      <line x1='10' y1='15' x2='2' y2='7' />\n      <line x1='18' y1='7' x2='10' y2='15' />\n    </svg>\n  )\n}\n","import React from 'react'\n\nfunction Options({\n  opts,\n  singleSelect,\n  addValue,\n  checkValueExist,\n  value,\n  largeData,\n  menuOpen\n}) {\n  if (largeData && !menuOpen) return null\n  const optsArr = []\n  function addInArr(opts) {\n    for (const [i, opt] of opts.entries()) {\n      if (opt.type === 'group') {\n        optsArr.push(\n          <div key={opt.title + i} data-msl className='msl-grp-title'>\n            {opt.title}\n          </div>\n        )\n        if (opt.childs.length > 0) {\n          addInArr(opt.childs)\n        } else {\n          optsArr.push(\n            <option className='msl-option msl-option-disable'>\n              {opt.emptyDataLabel || 'No Data Found'}\n            </option>\n          )\n        }\n      } else {\n        optsArr.push(\n          <div\n            tabIndex='0'\n            key={opt.value + opt.label + i + 10}\n            {...(!singleSelect && { 'data-msl': true })}\n            style={{\n              ...(opt.style && opt.style)\n            }}\n            onClick={() => {\n              !opt.disabled && addValue(opt)\n            }}\n            onKeyPress={(e) => {\n              e.key === 'Enter' && !opt.disabled && addValue(opt)\n            }}\n            title={typeof opt.label === 'object' ? opt?.title : opt.label}\n            className={`msl-option ${checkValueExist(opt, value) ? 'msl-option-active' : ''\n              } ${opt.disabled ? 'msl-option-disable' : ''} ${opt.classes !== undefined ? opt.classes : ''\n              }`}\n            value={opt.value}\n          >\n            {opt.label}\n          </div>\n        )\n      }\n    }\n  }\n  addInArr(opts)\n  return <div>{optsArr}</div>\n}\n\nexport default Options\n","/* eslint-disable no-labels */\nimport React, { useState, useEffect, useRef } from 'react'\nimport Chip from './Chip.jsx'\nimport CloseIcon from './CloseIcon.jsx'\nimport DownIcon from './DownIcon.jsx'\nimport Options from './Options'\nimport './styles.css'\nimport useComponentVisible from './useComponentVisible.jsx'\n\nMultiSelect.defaultProps = {\n  clearable: true,\n  downArrow: true,\n  singleSelect: false,\n  jsonValue: false,\n  defaultValue: '',\n  disableChip: false,\n  name: '',\n  style: {},\n  disabled: false,\n  limit: null,\n  emptyDataLabel: 'No Data Found',\n  placeholder: 'Select...',\n  onChange: () => {},\n  options: [\n    {\n      label: 'Empty',\n      value: '',\n      disabled: true,\n      style: { textAlign: 'center' }\n    }\n  ],\n  customValue: false,\n  chipAlternateText: 'Item Selected'\n}\n\nfunction MultiSelect({\n  options: userOptions,\n  downArrowIcon,\n  closeIcon,\n  clearable,\n  downArrow,\n  onChange,\n  singleSelect,\n  jsonValue,\n  defaultValue,\n  className,\n  placeholder,\n  disableChip,\n  name,\n  style,\n  attr,\n  largeData,\n  disabled,\n  limit,\n  emptyDataLabel,\n  customValue,\n  onMenuOpen,\n  onMenuClose,\n  chipAlternateText\n}) {\n  const [value, setValue] = useState([])\n  const [options, setOptions] = useState(userOptions || [])\n  const [search, setSearch] = useState(null)\n  const inputFld = useRef(null)\n  const {\n    ref: componentRef,\n    isComponentVisible: menuOpen,\n    setIsComponentVisible: setMenuOpen\n  } = useComponentVisible({\n    initialIsVisible: false,\n    onClickOutside: onMenuClose\n  })\n\n  const calculatedWidth = `calc(100% - ${\n    clearable && downArrow ? 60 : downArrow || clearable ? 40 : 5\n  }px)`\n\n  const getValueObjFromOptios = (defaultValue, options) => {\n    if (!defaultValue) return []\n    let defaultValArr = defaultValue\n    const extraValues = []\n    const searchedOptions = []\n\n    if (typeof defaultValue === 'string') {\n      defaultValArr = defaultValue.split(',')\n    }\n\n    const setExtraValue = (value) => {\n      if (typeof value === 'string') {\n        extraValues.push({ label: value, value })\n      } else if (typeof value === 'object') {\n        const newValueObj = { label: value, value }\n        if ('label' in value && typeof value.label === 'string') {\n          newValueObj.label = value.label\n        } else if ('title' in value) {\n          newValueObj.label = value.title\n        }\n        extraValues.push(newValueObj)\n      }\n    }\n\n    for (let i = 0; i < defaultValArr.length; i++) {\n      if (typeof defaultValArr[i] === 'string') {\n        const optObject = searchOptions(\n          defaultValArr[i],\n          options,\n          true,\n          'value'\n        )\n        if (optObject.length > 0) {\n          searchedOptions.push(optObject[0])\n        } else if (customValue) {\n          setExtraValue(defaultValArr[i])\n        }\n      } else if (typeof defaultValArr[i] === 'object') {\n        const optObject = searchOptions(\n          defaultValArr[i].value,\n          options,\n          true,\n          'value'\n        )\n        if (optObject.length > 0) {\n          searchedOptions.push(optObject[0])\n        } else if (customValue) {\n          setExtraValue(defaultValArr[i])\n        }\n      }\n    }\n\n    let customValuesGroup = []\n    if (extraValues.length) {\n      customValuesGroup = createCustomValueAndOption(extraValues)\n    }\n    setOptions([...options, ...customValuesGroup])\n    return [...searchedOptions, ...extraValues]\n  }\n\n  useEffect(() => {\n    setOptions(userOptions)\n  }, [userOptions])\n\n  useEffect(() => {\n    let preDefinedValue = getValueObjFromOptios(defaultValue, options)\n\n    if (singleSelect && preDefinedValue.length > 0) {\n      preDefinedValue = [preDefinedValue[0]]\n    }\n\n    setValue(preDefinedValue)\n  }, [defaultValue])\n\n  const setNewValue = (val) => {\n    setValue(val)\n    if (jsonValue) {\n      onChange(val)\n    } else {\n      let stringvalue = ''\n      stringvalue += val.map((itm) => itm.value)\n      onChange(stringvalue)\n    }\n  }\n\n  const checkValueExist = (value, arr) => {\n    const bool = arr.some((itm) => itm.value === value.value)\n    return bool\n  }\n\n  const filterCreateOpt = ({ label, value }) => {\n    if (typeof label !== 'object' && label.match(/Create \"|\"+/g)) {\n      label = label.replace(/Create \"|\"+/g, '')\n    }\n    return { label, value }\n  }\n\n  const addValue = (newValObj) => {\n    let tmp = [...value]\n    if (singleSelect) {\n      if (checkValueExist(newValObj, value)) {\n        tmp = []\n      } else {\n        tmp = [newValObj]\n      }\n    } else {\n      if (!checkValueExist(newValObj, value)) {\n        if (limit === null) {\n          tmp.push(newValObj)\n        } else if (limit > value.length) {\n          tmp.push(newValObj)\n        }\n      } else {\n        tmp = tmp.filter((itm) => itm.value !== newValObj.value)\n      }\n    }\n    setNewValue(tmp)\n    setSearch(null)\n    // clear search input\n    if (inputFld.current) {\n      inputFld.current.innerHTML = ''\n    }\n  }\n\n  const deleteValue = (i) => {\n    const tmp = [...value]\n    tmp.splice(i, 1)\n    setNewValue(tmp)\n  }\n\n  const clearValue = () => {\n    setNewValue([])\n  }\n\n  const showSearchOption = () => {\n    if (!singleSelect && !disableChip) {\n      return true\n    } else if (singleSelect && !value.length) {\n      return true\n    } else if (!singleSelect && disableChip && !value.length) {\n      return true\n    }\n    return false\n  }\n\n  const searchOptions = (str, options, exact, type) => {\n    const searchedOptions = []\n    const searchedOptValues = []\n\n    const searchInOptions = (opt) => {\n      for (let i = 0; i < opt.length; i++) {\n        if (opt[i]?.type === 'group') {\n          searchInOptions(opt[i].childs)\n        } else if (!exact) {\n          if (\n            typeof opt[i].label !== 'object' &&\n            opt[i].label.match(new RegExp(`${str}`, 'gi'))\n          ) {\n            searchedOptions.push(opt[i])\n          } else if (\n            typeof opt[i].label === 'object' &&\n            opt[i]?.title?.match(new RegExp(`${str}`, 'gi'))\n          ) {\n            searchedOptions.push(opt[i])\n          } else if (opt[i].value.match(new RegExp(`${str}`, 'gi'))) {\n            searchedOptValues.push(opt[i])\n          }\n        } else if (exact) {\n          if (opt[i][type] === str) {\n            searchedOptions.push(opt[i])\n          }\n        }\n        if (typeof opt[i].label === 'object' && !('title' in opt[i])) {\n          console.warn(\n            '[multiselect] you must provide a title property as typeof string, if you want to render jsx in option label'\n          )\n        }\n      }\n    }\n    searchInOptions(options)\n    return [...searchedOptions, ...searchedOptValues]\n  }\n\n  const createCustomValueAndOption = (valueObj) => {\n    const customValuesGroup = []\n    const customValuesIndx = options.findIndex(\n      (opt) => opt?.type === 'group' && opt?.title === 'Custom Values'\n    )\n\n    if (customValuesIndx === -1) {\n      customValuesGroup.push({\n        title: 'Custom Values',\n        type: 'group',\n        childs: [...valueObj]\n      })\n    } else if (Array.isArray(valueObj)) {\n      valueObj.map((value) => options[customValuesIndx].childs.push(value))\n    } else if (typeof valueObj === 'object') {\n      options[customValuesIndx].childs.push(valueObj)\n    }\n    setOptions([...options, ...customValuesGroup])\n\n    return customValuesGroup\n  }\n\n  const handleSearchAndCustomValue = (e) => {\n    const textValue = e.target.textContent.trim().replace(/,+/g, '')\n\n    if (textValue) {\n      const newValue = {\n        label: `Create \"${textValue}\"`,\n        value: textValue\n      }\n\n      const searchedOptions = searchOptions(textValue, options)\n\n      if (searchedOptions.length) {\n        if (customValue) {\n          const exactOptionValue = searchOptions(\n            textValue,\n            options,\n            true,\n            'value'\n          )\n\n          !exactOptionValue.length && searchedOptions.push(newValue)\n        }\n        setSearch(searchedOptions)\n      } else {\n        customValue ? setSearch([newValue]) : setSearch([])\n      }\n\n      const filteredNewValue = filterCreateOpt(newValue)\n\n      if (e.key === 'Enter' || e.key === ',') {\n        if (\n          customValue &&\n          !searchedOptions.length &&\n          !checkValueExist(filteredNewValue, value)\n        ) {\n          createCustomValueAndOption(filteredNewValue)\n\n          addValue(newValue)\n        } else {\n          search.length > 0 && addValue(search[0])\n        }\n      }\n    } else {\n      setSearch(null)\n    }\n  }\n\n  const notClickableItem = (target) => {\n    if (\n      target.hasAttribute('clickable') ||\n      target.parentNode.hasAttribute('clickable') ||\n      target.parentNode.parentNode.hasAttribute('clickable') ||\n      target.parentNode.parentNode.parentNode.hasAttribute('clickable')\n    ) {\n      return false\n    }\n    return true\n  }\n\n  const checkIsDropdownHandle = (target) => {\n    if (\n      target.hasAttribute('dropdown-handle') ||\n      target.parentNode.hasAttribute('dropdown-handle') ||\n      target.parentNode.parentNode.hasAttribute('dropdown-handle')\n    ) {\n      return true\n    }\n  }\n\n  const focusSearchInput = () => {\n    if (inputFld.current) {\n      inputFld.current.focus()\n    }\n  }\n\n  const openMenu = ({ target }) => {\n    if (notClickableItem(target)) {\n      if (checkIsDropdownHandle(target)) {\n        if (!menuOpen) {\n          setMenuOpen(true)\n          onMenuOpen()\n          focusSearchInput()\n        } else {\n          setMenuOpen(false)\n          onMenuClose()\n        }\n      } else {\n        setMenuOpen(true)\n        onMenuOpen()\n        focusSearchInput()\n      }\n    }\n  }\n\n  const showLabel = (optionObj) => {\n    console.log(optionObj)\n    if (typeof optionObj.label === 'object') {\n      return optionObj?.title || optionObj.value\n    } else {\n      return optionObj.label\n    }\n  }\n\n  const getActiveClass = () => {\n    const el = componentRef.current\n    var rect = el.getBoundingClientRect()\n    if (window.innerHeight - (rect.top + el.clientHeight) < 200) {\n      return 'msl-active-up'\n    }\n    return 'msl-active'\n  }\n\n  return (\n    <div\n      ref={componentRef}\n      {...attr}\n      onClick={openMenu}\n      tabIndex='0'\n      onKeyPress={openMenu}\n      style={{ ...style }}\n      className={`msl-wrp msl-vars ${className} ${\n        disabled ? 'msl-disabled' : ''\n      }`}\n    >\n      <input name={name} type='hidden' value={value?.map((itm) => itm.value)} />\n      <div data-msl className={`msl ${menuOpen && getActiveClass()} `}>\n        <div\n          data-msl\n          className='msl-input-wrp'\n          style={{ width: calculatedWidth }}\n        >\n          {!singleSelect &&\n            !disableChip &&\n            value.map((val, i) => (\n              <Chip\n                key={`msl-chip-${i + 11}`}\n                value={val}\n                deleteAction={() => deleteValue(i)}\n              />\n            ))}\n          {!singleSelect && disableChip && value.length > 0 && (\n            <span\n              className='msl-single-value'\n              data-msl\n              style={{ width: calculatedWidth }}\n            >\n              {value.length === 1\n                ? showLabel(value[0])\n                : `${value.length} ${chipAlternateText}`}\n            </span>\n          )}\n          {singleSelect && value.length === 1 && (\n            <span\n              className='msl-single-value'\n              data-msl\n              style={{ width: calculatedWidth }}\n            >\n              {showLabel(value[0])}\n            </span>\n          )}\n          {showSearchOption() && (\n            <div\n              data-msl\n              data-placeholder={placeholder}\n              className='msl-input'\n              contentEditable={!disabled}\n              onKeyUp={handleSearchAndCustomValue}\n              ref={inputFld}\n            />\n          )}\n        </div>\n        {(clearable || downArrow) && (\n          <div className='msl-actions msl-flx'>\n            {clearable && value.length > 0 && (\n              <div\n                role='button'\n                clickable='true'\n                aria-label='close-menu'\n                onClick={clearValue}\n                onKeyPress={clearValue}\n                tabIndex='0'\n                className='msl-btn msl-clear-btn msl-flx'\n              >\n                {closeIcon || <CloseIcon />}\n              </div>\n            )}\n            {downArrow && (\n              <div\n                role='button'\n                tabIndex='0'\n                dropdown-handle='true'\n                className='msl-btn msl-arrow-btn msl-flx'\n                style={{ ...(menuOpen && { transform: 'rotate(180deg)' }) }}\n              >\n                {downArrowIcon || <DownIcon />}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className='msl-options'>\n        {!search && options.length ? (\n          <Options\n            opts={options}\n            {...{\n              singleSelect,\n              addValue,\n              checkValueExist,\n              value,\n              largeData,\n              menuOpen\n            }}\n          />\n        ) : search && search.length ? (\n          <Options\n            opts={search}\n            {...{\n              singleSelect,\n              addValue,\n              checkValueExist,\n              value,\n              largeData,\n              menuOpen\n            }}\n          />\n        ) : (\n          ((search && !search.length) || (options && !options.length)) && (\n            <option className='msl-option msl-option-disable'>\n              {emptyDataLabel}\n            </option>\n          )\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default MultiSelect\n","import { useRef, useState, useEffect } from 'react'\n\nexport default function useComponentVisible({\n  initialIsVisible,\n  onClickOutside\n}) {\n  const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n  const handleHideDropdown = (event) => {\n    if (event.key === 'Escape') {\n      setIsComponentVisible(false)\n    }\n  }\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      document.removeEventListener('keydown', handleHideDropdown, true)\n      document.removeEventListener('click', handleClickOutside, true)\n      setIsComponentVisible(false)\n      onClickOutside()\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleHideDropdown, true)\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('keydown', handleHideDropdown, true)\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  })\n\n  return { ref, isComponentVisible, setIsComponentVisible }\n}\n"],"names":["CloseIcon","React","className","x1","y1","x2","y2","Chip","opt","deleteAction","clickable","value","label","title","role","aria-label","onClick","onKeyPress","tabIndex","DownIcon","Options","singleSelect","addValue","checkValueExist","largeData","menuOpen","optsArr","addInArr","opts","i","type","push","key","data-msl","childs","length","emptyDataLabel","style","disabled","e","undefined","classes","entries","MultiSelect","userOptions","options","downArrowIcon","closeIcon","clearable","downArrow","onChange","jsonValue","defaultValue","placeholder","disableChip","name","attr","limit","customValue","onMenuOpen","onMenuClose","chipAlternateText","useState","setValue","setOptions","search","setSearch","inputFld","useRef","onClickOutside","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","handleHideDropdown","event","handleClickOutside","current","contains","target","document","removeEventListener","useEffect","addEventListener","useComponentVisible","componentRef","setMenuOpen","calculatedWidth","preDefinedValue","defaultValArr","extraValues","searchedOptions","split","setExtraValue","newValueObj","optObject","searchOptions","customValuesGroup","createCustomValueAndOption","getValueObjFromOptios","el","rect","setNewValue","val","stringvalue","map","itm","arr","some","newValObj","tmp","filter","innerHTML","clearValue","str","exact","searchedOptValues","searchInOptions","match","RegExp","_opt$i2","_opt$i2$title","console","warn","valueObj","customValuesIndx","findIndex","Array","isArray","openMenu","hasAttribute","parentNode","notClickableItem","checkIsDropdownHandle","focus","showLabel","optionObj","log","getBoundingClientRect","window","innerHeight","top","clientHeight","width","splice","deleteValue","data-placeholder","contentEditable","onKeyUp","textValue","textContent","trim","replace","newValue","filteredNewValue","filterCreateOpt","dropdown-handle","transform","defaultProps","textAlign"],"mappings":"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"}