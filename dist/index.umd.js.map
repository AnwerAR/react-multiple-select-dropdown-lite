{"version":3,"file":"index.umd.js","sources":["../src/CloseIcon.jsx","../src/DownIcon.jsx","../src/Options.jsx","../src/index.jsx","../src/useComponentVisible.jsx"],"sourcesContent":["import React from 'react'\n\nexport default function CloseIcon() {\n  return (\n    <svg className='msl-close-icn'>\n      <line x1='0' y1='0' x2='15' y2='15' />\n      <line x1='0' y1='15' x2='15' y2='0' />\n    </svg>\n  )\n}\n","import React from 'react'\n\nexport default function DownIcon() {\n  return (\n    <svg className='msl-arrow-icn'>\n      <line x1='10' y1='15' x2='2' y2='7' />\n      <line x1='18' y1='7' x2='10' y2='15' />\n    </svg>\n  )\n}\n","import React from 'react'\n\nfunction Options({\n  opts,\n  singleSelect,\n  addValue,\n  checkValueExist,\n  value,\n  largeData,\n  menuOpen\n}) {\n  if (largeData && !menuOpen) return null\n  const optsArr = []\n  function addInArr(opts) {\n    for (const [i, opt] of opts.entries()) {\n      if (opt.type === 'group') {\n        optsArr.push(\n          <div key={opt.title + i} data-msl className='msl-grp-title'>\n            {opt.title}\n          </div>\n        )\n        if (opt.childs.length > 0) {\n          addInArr(opt.childs)\n        } else {\n          optsArr.push(\n            <option className='msl-option msl-option-disable'>\n              {opt.emptyDataLabel || 'No Data Found'}\n            </option>\n          )\n        }\n      } else {\n        optsArr.push(\n          <option\n            tabIndex='0'\n            key={opt.value + opt.label + i + 10}\n            {...(!singleSelect && { 'data-msl': true })}\n            style={{\n              ...(opt.style && opt.style)\n            }}\n            onClick={() => {\n              !opt.disabled && addValue(opt)\n            }}\n            onKeyPress={(e) => {\n              e.key === 'Enter' && !opt.disabled && addValue(opt)\n            }}\n            title={opt.label}\n            className={`msl-option\n             ${checkValueExist(opt, value) ? 'msl-option-active' : ''} \n              ${opt.disabled ? 'msl-option-disable' : ''} ${opt.classes !== undefined ? opt.classes : ''\n              }`}\n            value={opt.value}\n          >\n            {opt.label}\n          </option>\n        )\n      }\n    }\n  }\n  addInArr(opts)\n  return <div>{optsArr}</div>\n}\n\nexport default Options\n","/* eslint-disable no-labels */\nimport React, { useState, useEffect, useRef } from 'react'\nimport CloseIcon from './CloseIcon.jsx'\nimport DownIcon from './DownIcon.jsx'\nimport Options from './Options'\nimport './styles.css'\nimport useComponentVisible from './useComponentVisible.jsx'\n\nMultiSelect.defaultProps = {\n  clearable: true,\n  downArrow: true,\n  width: 300,\n  singleSelect: false,\n  jsonValue: false,\n  defaultValue: '',\n  disableChip: false,\n  name: '',\n  style: {},\n  disabled: false,\n  limit: null,\n  emptyDataLabel: 'No Data Found',\n  placeholder: 'Select...',\n  onChange: () => {},\n  options: [\n    {\n      label: 'Empty',\n      value: '',\n      disabled: true,\n      style: { textAlign: 'center' }\n    }\n  ],\n  customValue: false\n}\n\nfunction MultiSelect({\n  options: userOptions,\n  width,\n  downArrowIcon,\n  closeIcon,\n  clearable,\n  downArrow,\n  onChange,\n  singleSelect,\n  jsonValue,\n  defaultValue,\n  className,\n  placeholder,\n  disableChip,\n  name,\n  style,\n  attr,\n  largeData,\n  disabled,\n  limit,\n  emptyDataLabel,\n  customValue\n}) {\n  // const [menuOpen, setMenuOpen] = useState(false)\n  const [value, setValue] = useState([])\n  const [options, setOptions] = useState(userOptions || [])\n  const [search, setSearch] = useState(null)\n  const inputFld = useRef(null)\n  const {\n    ref,\n    isComponentVisible: menuOpen,\n    setIsComponentVisible: setMenuOpen\n  } = useComponentVisible(false)\n\n  const preparDefaultValue = (defaultValue) => {\n    let defaultValArr = defaultValue\n    if (typeof defaultValue === 'string') {\n      defaultValArr = defaultValue.split(',')\n    }\n    const optionString = JSON.stringify(options)\n    const extraValues = []\n\n    const setExtraValue = (value) => {\n      extraValues.push({ label: value, value })\n      return { label: value, value }\n    }\n\n    const defaultValueObj = []\n\n    for (const value of defaultValArr) {\n      const matchedVals = optionString.match(\n        new RegExp(\n          `{+?.[^{]*?\"${value\n            .replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') // escape special chars\n            .replace(/\"/g, '\\\\\\\\$&')}\"}`, // escape \" as \\\\\n          'g'\n        )\n      )\n\n      if (matchedVals) {\n        if (matchedVals.length === 1) {\n          defaultValueObj.push(JSON.parse(matchedVals))\n        } else if (matchedVals.length > 1) {\n          defaultValueObj.push(JSON.parse(`[${matchedVals.join(',')}]`))\n        }\n      } else if (value !== '' && value !== null && customValue) {\n        setExtraValue(value)\n        defaultValueObj.push({ label: value, value })\n      }\n    }\n\n    setOptions([...options, ...extraValues])\n    return defaultValueObj\n  }\n\n  const filterExtraCustomVal = (valArrObj) => {\n    const optionString = JSON.stringify(options)\n    return valArrObj.filter(\n      (obj) =>\n        !JSON.parse(\n          optionString.match(new RegExp(`{+?.[^{]*?${obj.value}\"}`, 'g'))\n        )\n    )\n  }\n\n  useEffect(() => {\n    setOptions(userOptions)\n  }, [userOptions])\n\n  useEffect(() => {\n    let preDefinedValue = []\n    if (defaultValue !== '' || defaultValue.length > 0) {\n      // when default value is string and value separated comma\n      if (typeof defaultValue === 'string') {\n        preDefinedValue = preparDefaultValue(defaultValue)\n        if (singleSelect && preDefinedValue.length > 1) {\n          preDefinedValue = [preDefinedValue[0]]\n        }\n      } else if (\n        Array.isArray(defaultValue) &&\n        defaultValue.length > 0 &&\n        typeof defaultValue[0] !== 'string'\n      ) {\n        // when default value is array of object\n        preDefinedValue = defaultValue // set array as default\n        const extraValue = filterExtraCustomVal(defaultValue)\n        setOptions([...options, ...extraValue])\n        if (singleSelect && preDefinedValue.length > 1) {\n          preDefinedValue = [preDefinedValue[0]]\n        }\n      } else if (Array.isArray(defaultValue) && defaultValue.length > 0) {\n        // when default value is array of string\n        preDefinedValue = preparDefaultValue(defaultValue)\n        if (singleSelect && preDefinedValue.length > 1) {\n          preDefinedValue = [preDefinedValue[0]]\n        }\n      }\n    }\n    setValue(preDefinedValue)\n  }, [defaultValue])\n\n  const setNewValue = (val) => {\n    setValue(val)\n    if (jsonValue) {\n      onChange(val)\n    } else {\n      let stringvalue = ''\n      stringvalue += val.map((itm) => itm.value)\n      onChange(stringvalue)\n    }\n  }\n\n  const checkValueExist = (value, arr) => {\n    const bool = arr.some((itm) => itm.value === value.value)\n    return bool\n  }\n\n  const filterCreateOpt = ({ label, value }) => {\n    if (label.match(/Create \"|\"+/g)) {\n      label = label.replace(/Create \"|\"+/g, '')\n    }\n    return { label, value }\n  }\n\n  const addValue = (newValObj) => {\n    newValObj = filterCreateOpt(newValObj)\n    let tmp = [...value]\n    if (singleSelect) {\n      tmp = [newValObj]\n    } else {\n      if (!checkValueExist(newValObj, value)) {\n        if (limit === null) {\n          tmp.push(newValObj)\n        } else if (limit > value.length) {\n          tmp.push(newValObj)\n        }\n      } else {\n        tmp = tmp.filter((itm) => itm.value !== newValObj.value)\n      }\n    }\n    setNewValue(tmp)\n    setSearch(null)\n    // clear input\n    inputFld.current.innerHTML = ''\n  }\n\n  const deleteValue = (i) => {\n    const tmp = [...value]\n    tmp.splice(i, 1)\n    setNewValue(tmp)\n  }\n\n  const clearValue = () => {\n    setNewValue([])\n  }\n  const showSearchOption = () => {\n    if (!singleSelect && !disableChip) {\n      return true\n    } else if (singleSelect && !value.length) {\n      return true\n    } else if (!singleSelect && disableChip && !value.length) {\n      return true\n    }\n    return false\n  }\n\n  const searchValue = (e) => {\n    const textValue = e.target.textContent.trim().replace(/,+/g, '')\n\n    if (textValue) {\n      const newValue = {\n        label: `Create \"${textValue}\"`,\n        value: textValue\n      }\n\n      const optionsString = JSON.stringify(options)\n\n      const searchedOptions = optionsString.match(\n        new RegExp(\n          `{\"label\":+?.[^{]*?(${textValue.replace(\n            /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\n            '\\\\$&'\n          )})+?.[^{]*?}`,\n          'gi'\n        )\n      )\n\n      if (searchedOptions) {\n        const searchedOptionsArr = JSON.parse(`[${searchedOptions}]`)\n\n        if (customValue) {\n          const exactOptionValue = optionsString.match(\n            new RegExp(\n              `{\"label\":(.[^{]*?)\"value\":\"${textValue.replace(\n                /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\n                '\\\\$&'\n              )}\"}`,\n              'gi'\n            )\n          )\n\n          !exactOptionValue && searchedOptionsArr.push(newValue)\n        }\n        setSearch(searchedOptionsArr)\n      } else {\n        customValue ? setSearch([newValue]) : setSearch([])\n      }\n\n      if (e.key === 'Enter' || e.key === ',') {\n        if (\n          customValue &&\n          !searchedOptions &&\n          !checkValueExist(filterCreateOpt(newValue), value)\n        ) {\n          setOptions([...options, filterCreateOpt(newValue)])\n          addValue(newValue)\n        } else {\n          search.length > 0 && addValue(search[0])\n        }\n      }\n    } else {\n      setSearch(null)\n    }\n  }\n\n  const checkIsDropdownHandle = (target) => {\n    if (\n      target.hasAttribute('dropdown-handle') ||\n      target.parentNode.hasAttribute('dropdown-handle') ||\n      target.parentNode.parentNode.hasAttribute('dropdown-handle')\n    ) {\n      return true\n    }\n  }\n\n  const openMenu = ({ target }) => {\n    if (checkIsDropdownHandle(target)) {\n      setMenuOpen(!menuOpen)\n    } else {\n      setMenuOpen(true)\n    }\n  }\n\n  return (\n    <div\n      ref={ref}\n      {...attr}\n      onClick={openMenu}\n      tabIndex='0'\n      onKeyPress={openMenu}\n      style={{ ...style, width }}\n      className={`msl-wrp msl-vars ${className} ${\n        disabled ? 'msl-disabled' : ''\n      }`}\n    >\n      <input name={name} type='hidden' value={value.map((itm) => itm.value)} />\n      <div data-msl className={`msl ${menuOpen ? 'msl-active' : ''} `}>\n        <div\n          data-msl\n          className='msl-input-wrp'\n          style={{\n            width: `calc(100% - ${\n              clearable && downArrow\n                ? '60px'\n                : downArrow || clearable\n                ? '40px'\n                : '5px'\n            }`\n          }}\n        >\n          {!singleSelect &&\n            !disableChip &&\n            value.map((val, i) => (\n              <div key={`msl-chip-${i + 11}`} className='msl-chip'>\n                {val.label}\n                <div\n                  role='button'\n                  aria-label='delete-value'\n                  onClick={() => deleteValue(i)}\n                  onKeyPress={() => deleteValue(i)}\n                  tabIndex='0'\n                  className='msl-btn msl-chip-delete msl-flx'\n                >\n                  <CloseIcon />\n                </div>\n                <span />\n              </div>\n            ))}\n          {!singleSelect && disableChip && value.length === 1 ? (\n            <span\n              className='msl-single-value'\n              data-msl\n              style={{\n                width:\n                  width -\n                  (clearable && downArrow\n                    ? 60\n                    : downArrow || clearable\n                    ? 40\n                    : 5)\n              }}\n            >\n              {value[0].label}d\n            </span>\n          ) : (\n            disableChip &&\n            value.length > 1 && (\n              <span\n                className='msl-single-value'\n                data-msl\n                style={{\n                  width:\n                    width -\n                    (clearable && downArrow\n                      ? 60\n                      : downArrow || clearable\n                      ? 40\n                      : 5)\n                }}\n              >\n                {value.length} Selected\n              </span>\n            )\n          )}\n          {singleSelect && value.length === 1 && (\n            <span\n              className='msl-single-value'\n              data-msl\n              style={{\n                width:\n                  width -\n                  (clearable && downArrow\n                    ? 60\n                    : downArrow || clearable\n                    ? 40\n                    : 5)\n              }}\n            >\n              {value[0].label}\n            </span>\n          )}\n          {showSearchOption() && (\n            <div\n              data-msl\n              data-placeholder={placeholder}\n              className='msl-input'\n              contentEditable={!disabled}\n              onKeyUp={searchValue}\n              ref={inputFld}\n            />\n          )}\n        </div>\n        {(clearable || downArrow) && (\n          <div className='msl-actions msl-flx'>\n            {clearable && value.length > 0 && (\n              <div\n                role='button'\n                aria-label='close-menu'\n                onClick={clearValue}\n                onKeyPress={clearValue}\n                tabIndex='0'\n                className='msl-btn msl-clear-btn msl-flx'\n              >\n                {closeIcon || <CloseIcon />}\n              </div>\n            )}\n            {downArrow && (\n              <div\n                role='button'\n                tabIndex='0'\n                dropdown-handle='true'\n                className='msl-btn msl-arrow-btn msl-flx'\n                style={{ ...(menuOpen && { transform: 'rotate(180deg)' }) }}\n              >\n                {downArrowIcon || <DownIcon />}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className='msl-options'>\n        {!search && options.length ? (\n          <Options\n            opts={options}\n            {...{\n              singleSelect,\n              addValue,\n              checkValueExist,\n              value,\n              largeData,\n              menuOpen\n            }}\n          />\n        ) : search && search.length ? (\n          <Options\n            opts={search}\n            {...{\n              singleSelect,\n              addValue,\n              checkValueExist,\n              value,\n              largeData,\n              menuOpen\n            }}\n          />\n        ) : (\n          ((search && !search.length) || (options && !options.length)) && (\n            <option className='msl-option msl-option-disable'>\n              {emptyDataLabel}\n            </option>\n          )\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default MultiSelect\n","import { useRef, useState, useEffect } from 'react'\n\nexport default function useComponentVisible(initialIsVisible) {\n  const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n  const handleHideDropdown = (event) => {\n    if (event.key === 'Escape') {\n      setIsComponentVisible(false)\n    }\n  }\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      document.removeEventListener('keydown', handleHideDropdown, true)\n      document.removeEventListener('click', handleClickOutside, true)\n      setIsComponentVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleHideDropdown, true)\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('keydown', handleHideDropdown, true)\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  })\n\n  return { ref, isComponentVisible, setIsComponentVisible }\n}\n"],"names":["CloseIcon","React","className","x1","y1","x2","y2","DownIcon","Options","singleSelect","addValue","checkValueExist","value","largeData","menuOpen","optsArr","addInArr","opts","i","opt","type","push","key","title","data-msl","childs","length","emptyDataLabel","tabIndex","label","style","onClick","disabled","onKeyPress","e","undefined","classes","entries","MultiSelect","userOptions","options","width","downArrowIcon","closeIcon","clearable","downArrow","onChange","jsonValue","defaultValue","placeholder","disableChip","name","attr","limit","customValue","useState","setValue","setOptions","search","setSearch","inputFld","useRef","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","handleHideDropdown","event","handleClickOutside","current","contains","target","document","removeEventListener","useEffect","addEventListener","useComponentVisible","setMenuOpen","preparDefaultValue","defaultValArr","split","optionString","JSON","stringify","extraValues","setExtraValue","defaultValueObj","matchedVals","match","RegExp","replace","parse","join","valArrObj","preDefinedValue","Array","isArray","extraValue","filter","obj","setNewValue","val","stringvalue","map","itm","arr","some","filterCreateOpt","newValObj","tmp","innerHTML","deleteValue","splice","clearValue","openMenu","hasAttribute","parentNode","checkIsDropdownHandle","role","aria-label","data-placeholder","contentEditable","onKeyUp","textValue","textContent","trim","newValue","optionsString","searchedOptions","searchedOptionsArr","dropdown-handle","transform","defaultProps","textAlign"],"mappings":"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"}